{"version":3,"sources":["common.js","components/player.js"],"names":["Player","constructor","selector","player","document","querySelector","video","hidePanel","timer","playVideo","addEventListener","toggleVideo","bind","toggleFullscreen","toggleVolume","setVolume","setSpeed","setVideoTime","currentVideoTime","setLinePos","playing","playIcon","playCircle","classList","toggle","play","style","opacity","setTimeout","pause","full","fullscreenElement","fullIcon","iconPlay","requestFullscreen","left","top","exitFullscreen","sounding","muteVolume","volumeSlider","muted","setAttribute","value","getAttribute","volume","playbackRate","duration","Math","floor","innerHTML","current","currentTime","seconds","width","hide","clearTimeout","event","lineWidth","clientWidth","pos","offsetX","burger"],"mappings":"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","file":"common.js","sourcesContent":["// =include components/scroll.js\r\n// =include components/nav.js\r\nclass Player {\r\n    constructor(selector) {\r\n        this.player = document.querySelector(selector);\r\n        this.video = this.player.querySelector('video');\r\n        this.hidePanel = true;\r\n        this.timer;\r\n        this.playVideo();\r\n    }\r\n\r\n    playVideo() {\r\n        this.video.addEventListener('click', this.toggleVideo.bind(this));\r\n        this.player.querySelector('.panel__left-play').addEventListener('click', this.toggleVideo.bind(this));\r\n        this.player.querySelector('.circle').addEventListener('click', this.toggleVideo.bind(this));\r\n        this.video.addEventListener('dblclick', this.toggleFullscreen.bind(this));\r\n        this.player.querySelector('.video__fullscreen').addEventListener('click', this.toggleFullscreen.bind(this));\r\n        this.player.querySelector('.volume__mute').addEventListener('click', this.toggleVolume.bind(this));\r\n        this.player.querySelector('.volume__slider').addEventListener('input', this.setVolume.bind(this));\r\n        this.player.querySelector('.right__video-speed').addEventListener('input', this.setSpeed.bind(this));\r\n        this.video.addEventListener('loadedmetadata', this.setVideoTime.bind(this));\r\n        this.video.addEventListener('timeupdate', this.currentVideoTime.bind(this));\r\n        this.player.querySelector('.panel__line').addEventListener('click', this.setLinePos.bind(this));\r\n\r\n    }\r\n\r\n    toggleVideo() {\r\n        this.playing = !this.playing;\r\n        const playIcon = this.player.querySelector('.panel__left-play .left-play');\r\n        const playCircle = this.player.querySelector('.circle');\r\n        playIcon.classList.toggle('icon-play', !this.playing);\r\n        playIcon.classList.toggle('icon-pause', this.playing);\r\n\r\n        if (this.playing) {\r\n            this.video.play();\r\n            playCircle.style.opacity = '0'\r\n            setTimeout(() => {\r\n                document.querySelector('.player__panel').style.opacity = '0';\r\n            }, 4000);\r\n        }\r\n        else {\r\n            this.video.pause();\r\n            playCircle.style.opacity = '1'\r\n            document.querySelector('.player__panel').style.opacity = '1';\r\n        }\r\n    }\r\n\r\n    toggleFullscreen() {\r\n        const full = document.fullscreenElement;\r\n        const fullIcon = this.player.querySelector('.video__fullscreen .full__screen')\r\n        const iconPlay = this.player.querySelector('.circle');\r\n\r\n        fullIcon.classList.toggle('icon-fullscrn', full);\r\n        fullIcon.classList.toggle('icon-compress', !full);\r\n\r\n        if (!full) {\r\n            this.player.requestFullscreen();\r\n            iconPlay.style.left = '56rem';\r\n            iconPlay.style.top = '19rem';\r\n        }\r\n        else {\r\n            document.exitFullscreen();\r\n            iconPlay.style.left = '';\r\n            iconPlay.style.top = '';\r\n        }\r\n    }\r\n\r\n    toggleVolume() {\r\n        this.sounding = !this.sounding;\r\n        const muteVolume = this.player.querySelector('.volume__mute .fad');\r\n        const volumeSlider = this.player.querySelector('.volume__slider');\r\n\r\n        muteVolume.classList.toggle('icon-volumeup', !this.sounding);\r\n        muteVolume.classList.toggle('icon-volumemute', this.sounding);\r\n\r\n        if (this.sounding) {\r\n            this.video.muted = true;\r\n            volumeSlider.setAttribute('data-volume', volumeSlider.value);\r\n            volumeSlider.value = 0;\r\n        }\r\n        else {\r\n            this.video.muted = false;\r\n            volumeSlider.value = volumeSlider.getAttribute('data-volume');\r\n        }\r\n    }\r\n\r\n    setVolume() {\r\n        this.video.volume = this.player.querySelector('.volume__slider').value / 100;\r\n    }\r\n\r\n    setSpeed() {\r\n        this.video.playbackRate = this.player.querySelector('.right__video-speed').value;\r\n    }\r\n\r\n    setVideoTime() {\r\n        const duration = Math.floor(this.video.duration);\r\n        this.player.querySelector('.video__time-duration').innerHTML = `${Math.floor(duration / 60)}:${Math.floor(duration % 60)}`;\r\n\r\n    }\r\n\r\n    currentVideoTime() {\r\n        const duration = Math.floor(this.video.duration);\r\n        const current = Math.floor(this.video.currentTime);\r\n        let seconds = 0;\r\n\r\n        if (current % 60 < 10) {\r\n            seconds = `0${current % 60}`;\r\n        }\r\n        else {\r\n            seconds = `${current % 60}`\r\n        }\r\n\r\n        this.player.querySelector('.video__time-current').innerHTML = `${Math.floor(current / 60)}:${seconds}`;\r\n        this.player.querySelector('.panel__line-pos').style.width = `${current / duration * 100}%`;\r\n\r\n        if (this.hidePanel) {\r\n            this.hidePanel = false;\r\n            this.timer = setTimeout(() => {\r\n                this.player.querySelector('.player__panel').style.opacity = '0';\r\n            }, 4000);\r\n        }\r\n        this.video.addEventListener('mousemove', this.hide.bind(this));\r\n    }\r\n\r\n    hide() {\r\n        this.hidePanel = true;\r\n        clearTimeout(this.timer);\r\n        document.querySelector('.player__panel').style.opacity = '1';\r\n    }\r\n\r\n    setLinePos(event) {\r\n        const lineWidth = this.player.querySelector('.panel__line').clientWidth;\r\n        const pos = event.offsetX;\r\n        const duration = Math.floor(this.video.duration);\r\n\r\n        this.player.querySelector('.panel__line-pos').style.width = `${pos / lineWidth * 100}%`;\r\n        this.video.currentTime = pos / lineWidth * duration;\r\n\r\n    }\r\n}\r\nnew Player('.player__items-right');\r\nlet burger = document.querySelector('.header__burger');\r\nburger.addEventListener('click', function () {\r\n    burger.classList.toggle('active');\r\n})","class Player {\r\n    constructor(selector) {\r\n        this.player = document.querySelector(selector);\r\n        this.video = this.player.querySelector('video');\r\n        this.hidePanel = true;\r\n        this.timer;\r\n        this.playVideo();\r\n    }\r\n\r\n    playVideo() {\r\n        this.video.addEventListener('click', this.toggleVideo.bind(this));\r\n        this.player.querySelector('.panel__left-play').addEventListener('click', this.toggleVideo.bind(this));\r\n        this.player.querySelector('.circle').addEventListener('click', this.toggleVideo.bind(this));\r\n        this.video.addEventListener('dblclick', this.toggleFullscreen.bind(this));\r\n        this.player.querySelector('.video__fullscreen').addEventListener('click', this.toggleFullscreen.bind(this));\r\n        this.player.querySelector('.volume__mute').addEventListener('click', this.toggleVolume.bind(this));\r\n        this.player.querySelector('.volume__slider').addEventListener('input', this.setVolume.bind(this));\r\n        this.player.querySelector('.right__video-speed').addEventListener('input', this.setSpeed.bind(this));\r\n        this.video.addEventListener('loadedmetadata', this.setVideoTime.bind(this));\r\n        this.video.addEventListener('timeupdate', this.currentVideoTime.bind(this));\r\n        this.player.querySelector('.panel__line').addEventListener('click', this.setLinePos.bind(this));\r\n\r\n    }\r\n\r\n    toggleVideo() {\r\n        this.playing = !this.playing;\r\n        const playIcon = this.player.querySelector('.panel__left-play .left-play');\r\n        const playCircle = this.player.querySelector('.circle');\r\n        playIcon.classList.toggle('icon-play', !this.playing);\r\n        playIcon.classList.toggle('icon-pause', this.playing);\r\n\r\n        if (this.playing) {\r\n            this.video.play();\r\n            playCircle.style.opacity = '0'\r\n            setTimeout(() => {\r\n                document.querySelector('.player__panel').style.opacity = '0';\r\n            }, 4000);\r\n        }\r\n        else {\r\n            this.video.pause();\r\n            playCircle.style.opacity = '1'\r\n            document.querySelector('.player__panel').style.opacity = '1';\r\n        }\r\n    }\r\n\r\n    toggleFullscreen() {\r\n        const full = document.fullscreenElement;\r\n        const fullIcon = this.player.querySelector('.video__fullscreen .full__screen')\r\n        const iconPlay = this.player.querySelector('.circle');\r\n\r\n        fullIcon.classList.toggle('icon-fullscrn', full);\r\n        fullIcon.classList.toggle('icon-compress', !full);\r\n\r\n        if (!full) {\r\n            this.player.requestFullscreen();\r\n            iconPlay.style.left = '56rem';\r\n            iconPlay.style.top = '19rem';\r\n        }\r\n        else {\r\n            document.exitFullscreen();\r\n            iconPlay.style.left = '';\r\n            iconPlay.style.top = '';\r\n        }\r\n    }\r\n\r\n    toggleVolume() {\r\n        this.sounding = !this.sounding;\r\n        const muteVolume = this.player.querySelector('.volume__mute .fad');\r\n        const volumeSlider = this.player.querySelector('.volume__slider');\r\n\r\n        muteVolume.classList.toggle('icon-volumeup', !this.sounding);\r\n        muteVolume.classList.toggle('icon-volumemute', this.sounding);\r\n\r\n        if (this.sounding) {\r\n            this.video.muted = true;\r\n            volumeSlider.setAttribute('data-volume', volumeSlider.value);\r\n            volumeSlider.value = 0;\r\n        }\r\n        else {\r\n            this.video.muted = false;\r\n            volumeSlider.value = volumeSlider.getAttribute('data-volume');\r\n        }\r\n    }\r\n\r\n    setVolume() {\r\n        this.video.volume = this.player.querySelector('.volume__slider').value / 100;\r\n    }\r\n\r\n    setSpeed() {\r\n        this.video.playbackRate = this.player.querySelector('.right__video-speed').value;\r\n    }\r\n\r\n    setVideoTime() {\r\n        const duration = Math.floor(this.video.duration);\r\n        this.player.querySelector('.video__time-duration').innerHTML = `${Math.floor(duration / 60)}:${Math.floor(duration % 60)}`;\r\n\r\n    }\r\n\r\n    currentVideoTime() {\r\n        const duration = Math.floor(this.video.duration);\r\n        const current = Math.floor(this.video.currentTime);\r\n        let seconds = 0;\r\n\r\n        if (current % 60 < 10) {\r\n            seconds = `0${current % 60}`;\r\n        }\r\n        else {\r\n            seconds = `${current % 60}`\r\n        }\r\n\r\n        this.player.querySelector('.video__time-current').innerHTML = `${Math.floor(current / 60)}:${seconds}`;\r\n        this.player.querySelector('.panel__line-pos').style.width = `${current / duration * 100}%`;\r\n\r\n        if (this.hidePanel) {\r\n            this.hidePanel = false;\r\n            this.timer = setTimeout(() => {\r\n                this.player.querySelector('.player__panel').style.opacity = '0';\r\n            }, 4000);\r\n        }\r\n        this.video.addEventListener('mousemove', this.hide.bind(this));\r\n    }\r\n\r\n    hide() {\r\n        this.hidePanel = true;\r\n        clearTimeout(this.timer);\r\n        document.querySelector('.player__panel').style.opacity = '1';\r\n    }\r\n\r\n    setLinePos(event) {\r\n        const lineWidth = this.player.querySelector('.panel__line').clientWidth;\r\n        const pos = event.offsetX;\r\n        const duration = Math.floor(this.video.duration);\r\n\r\n        this.player.querySelector('.panel__line-pos').style.width = `${pos / lineWidth * 100}%`;\r\n        this.video.currentTime = pos / lineWidth * duration;\r\n\r\n    }\r\n}\r\nnew Player('.player__items-right');"]}